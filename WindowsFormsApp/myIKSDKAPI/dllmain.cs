//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.1.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class dllmain {
  public static int IKFace_Fun_Success {
    get {
      int ret = dllmainPINVOKE.IKFace_Fun_Success_get();
      return ret;
    } 
  }

  public static int IKFace_Err_BASE {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_BASE_get();
      return ret;
    } 
  }

  public static int IKFace_Err_ENR_IDEN_INTERRUPT {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_ENR_IDEN_INTERRUPT_get();
      return ret;
    } 
  }

  public static int IKFace_Err_Invalid_ENRNUM {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_Invalid_ENRNUM_get();
      return ret;
    } 
  }

  public static int IKFace_Err_Invalid_OVERTIME {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_Invalid_OVERTIME_get();
      return ret;
    } 
  }

  public static int IKFace_Err_Invalid_DELETEAREA {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_Invalid_DELETEAREA_get();
      return ret;
    } 
  }

  public static int IKFace_Err_Invalid_ENRIDENTDISTANCE {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_Invalid_ENRIDENTDISTANCE_get();
      return ret;
    } 
  }

  public static int IKFace_Err_Invalid_PosMoveCheck {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_Invalid_PosMoveCheck_get();
      return ret;
    } 
  }

  public static int IKFace_Err_Default {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_Default_get();
      return ret;
    } 
  }

  public static int IKFace_Err_BadInput {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_BadInput_get();
      return ret;
    } 
  }

  public static int IKFace_Err_Match_Failed {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_Match_Failed_get();
      return ret;
    } 
  }

  public static int IKFace_Err_EnrollPersonChange_CLEAR {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_EnrollPersonChange_CLEAR_get();
      return ret;
    } 
  }

  public static int IKFace_Err_QUEUE_FULL_CLEAR {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_QUEUE_FULL_CLEAR_get();
      return ret;
    } 
  }

  public static int IKFace_Err_ENROLLEND_CLEAR {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_ENROLLEND_CLEAR_get();
      return ret;
    } 
  }

  public static int IKFace_Err_CLEARCACHE_FAILED {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_CLEARCACHE_FAILED_get();
      return ret;
    } 
  }

  public static int IKFace_Err_ASYNCTASK_BUSY {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_ASYNCTASK_BUSY_get();
      return ret;
    } 
  }

  public static int IKFace_Err_STOP {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_STOP_get();
      return ret;
    } 
  }

  public static int IKFace_Err_TimeOut {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_TimeOut_get();
      return ret;
    } 
  }

  public static int IKFace_Err_EnrIden_Failed {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_EnrIden_Failed_get();
      return ret;
    } 
  }

  public static int IKFace_Err_Init_Fail {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_Init_Fail_get();
      return ret;
    } 
  }

  public static int IKFace_Err_Detect_Init_Fail {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_Detect_Init_Fail_get();
      return ret;
    } 
  }

  public static int IKFace_Err_Detect_Invalid_License {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_Detect_Invalid_License_get();
      return ret;
    } 
  }

  public static int IKFace_Err_Invalid_TpLen {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_Invalid_TpLen_get();
      return ret;
    } 
  }

  public static int IKFace_Err_Feature_Init_Fail {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_Feature_Init_Fail_get();
      return ret;
    } 
  }

  public static int IKFace_Err_Feature_Repeat_Fail {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_Feature_Repeat_Fail_get();
      return ret;
    } 
  }

  public static int IKFace_Err_Feature_Invalid_License {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_Feature_Invalid_License_get();
      return ret;
    } 
  }

  public static int IKFace_Err_NoMatch {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_NoMatch_get();
      return ret;
    } 
  }

  public static int IKFace_Err_RESETBUSY {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_RESETBUSY_get();
      return ret;
    } 
  }

  public static int IKFace_Err_RESET_CLEAR {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_RESET_CLEAR_get();
      return ret;
    } 
  }

  public static int IKFace_Err_RESET_FAILED {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_RESET_FAILED_get();
      return ret;
    } 
  }

  public static int IKFace_Err_SETCONFIGFILEPATH_FAILED {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_SETCONFIGFILEPATH_FAILED_get();
      return ret;
    } 
  }

  public static int IKFace_Err_Data_Interrupted {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_Data_Interrupted_get();
      return ret;
    } 
  }

  public static int IKFace_Err_CallSelect_Failed {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_CallSelect_Failed_get();
      return ret;
    } 
  }

  public static int IKFace_Err_LiveInit_Failed {
    get {
      int ret = dllmainPINVOKE.IKFace_Err_LiveInit_Failed_get();
      return ret;
    } 
  }

  public static int IKFaceMaxEnrNum {
    get {
      int ret = dllmainPINVOKE.IKFaceMaxEnrNum_get();
      return ret;
    } 
  }

  public static int IKFace_Ori_ImH {
    get {
      int ret = dllmainPINVOKE.IKFace_Ori_ImH_get();
      return ret;
    } 
  }

  public static int IKFace_Ori_ImW {
    get {
      int ret = dllmainPINVOKE.IKFace_Ori_ImW_get();
      return ret;
    } 
  }

  public static int IKFace_Ori_ImD {
    get {
      int ret = dllmainPINVOKE.IKFace_Ori_ImD_get();
      return ret;
    } 
  }

  public static int IKFace_MAX_IM_SIZE {
    get {
      int ret = dllmainPINVOKE.IKFace_MAX_IM_SIZE_get();
      return ret;
    } 
  }

  public static int IKDepth_Ori_ImH {
    get {
      int ret = dllmainPINVOKE.IKDepth_Ori_ImH_get();
      return ret;
    } 
  }

  public static int IKDepth_Ori_ImW {
    get {
      int ret = dllmainPINVOKE.IKDepth_Ori_ImW_get();
      return ret;
    } 
  }

  public static int IKDepth_Ori_ImD {
    get {
      int ret = dllmainPINVOKE.IKDepth_Ori_ImD_get();
      return ret;
    } 
  }

  public static int IKDepth_MAX_IM_SIZE {
    get {
      int ret = dllmainPINVOKE.IKDepth_MAX_IM_SIZE_get();
      return ret;
    } 
  }

  public static int IKFACE_FEATURE_LENGTH {
    get {
      int ret = dllmainPINVOKE.IKFACE_FEATURE_LENGTH_get();
      return ret;
    } 
  }

  public static int IK_VERSION_LENGTH {
    get {
      int ret = dllmainPINVOKE.IK_VERSION_LENGTH_get();
      return ret;
    } 
  }

  public static int IK_UnknownInfoLen {
    get {
      int ret = dllmainPINVOKE.IK_UnknownInfoLen_get();
      return ret;
    } 
  }

  public static int IK_CompleteInfoByte_IrisImFE {
    get {
      int ret = dllmainPINVOKE.IK_CompleteInfoByte_IrisImFE_get();
      return ret;
    } 
  }

  public static int IK_IRIS_ENROLL_FEATURE_SIZE {
    get {
      int ret = dllmainPINVOKE.IK_IRIS_ENROLL_FEATURE_SIZE_get();
      return ret;
    } 
  }

  public static int IK_IRIS_IDEN_FEATURE_SIZE {
    get {
      int ret = dllmainPINVOKE.IK_IRIS_IDEN_FEATURE_SIZE_get();
      return ret;
    } 
  }

  public static int IK_IRIS_IMG_HEIGHT {
    get {
      int ret = dllmainPINVOKE.IK_IRIS_IMG_HEIGHT_get();
      return ret;
    } 
  }

  public static int IK_IRIS_IMG_WIDTH {
    get {
      int ret = dllmainPINVOKE.IK_IRIS_IMG_WIDTH_get();
      return ret;
    } 
  }

  public static int IK_IRIS_IMG_SIZE {
    get {
      int ret = dllmainPINVOKE.IK_IRIS_IMG_SIZE_get();
      return ret;
    } 
  }

  public static int IK_IRIS_MIN_ENR_TIME {
    get {
      int ret = dllmainPINVOKE.IK_IRIS_MIN_ENR_TIME_get();
      return ret;
    } 
  }

  public static int IK_IRIS_MAX_ENR_TIME {
    get {
      int ret = dllmainPINVOKE.IK_IRIS_MAX_ENR_TIME_get();
      return ret;
    } 
  }

  public static int IK_IRIS_MIN_REC_TIME {
    get {
      int ret = dllmainPINVOKE.IK_IRIS_MIN_REC_TIME_get();
      return ret;
    } 
  }

  public static int IK_IRIS_MAX_REC_TIME {
    get {
      int ret = dllmainPINVOKE.IK_IRIS_MAX_REC_TIME_get();
      return ret;
    } 
  }

  public static int IK_IRIS_NEED_COUNT {
    get {
      int ret = dllmainPINVOKE.IK_IRIS_NEED_COUNT_get();
      return ret;
    } 
  }

  public static int IKIris_Ori_ImH {
    get {
      int ret = dllmainPINVOKE.IKIris_Ori_ImH_get();
      return ret;
    } 
  }

  public static int IKIris_Ori_ImW {
    get {
      int ret = dllmainPINVOKE.IKIris_Ori_ImW_get();
      return ret;
    } 
  }

  public static int IKIris_Ori_ImD {
    get {
      int ret = dllmainPINVOKE.IKIris_Ori_ImD_get();
      return ret;
    } 
  }

  public static int IKIris_MAX_IM_SIZE {
    get {
      int ret = dllmainPINVOKE.IKIris_MAX_IM_SIZE_get();
      return ret;
    } 
  }

  public static int IKIris_RESERVEDINFO_LEN {
    get {
      int ret = dllmainPINVOKE.IKIris_RESERVEDINFO_LEN_get();
      return ret;
    } 
  }

  public static int IKIris_RESERVEDINFO_DEBUG_FOCUSSCORE_L {
    get {
      int ret = dllmainPINVOKE.IKIris_RESERVEDINFO_DEBUG_FOCUSSCORE_L_get();
      return ret;
    } 
  }

  public static int IKIris_RESERVEDINFO_DEBUG_FOCUSSCORE_R {
    get {
      int ret = dllmainPINVOKE.IKIris_RESERVEDINFO_DEBUG_FOCUSSCORE_R_get();
      return ret;
    } 
  }

  public static int IKIris_RESERVEDINFO_DEBUG_PERCENTVISIBLE_L {
    get {
      int ret = dllmainPINVOKE.IKIris_RESERVEDINFO_DEBUG_PERCENTVISIBLE_L_get();
      return ret;
    } 
  }

  public static int IKIris_RESERVEDINFO_DEBUG_PERCENTVISIBLE_R {
    get {
      int ret = dllmainPINVOKE.IKIris_RESERVEDINFO_DEBUG_PERCENTVISIBLE_R_get();
      return ret;
    } 
  }

  public static int IKIris_RESERVEDINFO_DEBUG_BRIGHTNESS_L {
    get {
      int ret = dllmainPINVOKE.IKIris_RESERVEDINFO_DEBUG_BRIGHTNESS_L_get();
      return ret;
    } 
  }

  public static int IKIris_RESERVEDINFO_DEBUG_BRIGHTNESS_R {
    get {
      int ret = dllmainPINVOKE.IKIris_RESERVEDINFO_DEBUG_BRIGHTNESS_R_get();
      return ret;
    } 
  }

  public static int IKIris_RESERVEDINFO_DEBUG_MOTIONBLUR_L {
    get {
      int ret = dllmainPINVOKE.IKIris_RESERVEDINFO_DEBUG_MOTIONBLUR_L_get();
      return ret;
    } 
  }

  public static int IKIris_RESERVEDINFO_DEBUG_MOTIONBLUR_R {
    get {
      int ret = dllmainPINVOKE.IKIris_RESERVEDINFO_DEBUG_MOTIONBLUR_R_get();
      return ret;
    } 
  }

  public static int IKIris_RESERVEDINFO_DEBUG_GLASSFLAG_L {
    get {
      int ret = dllmainPINVOKE.IKIris_RESERVEDINFO_DEBUG_GLASSFLAG_L_get();
      return ret;
    } 
  }

  public static int IKIris_RESERVEDINFO_DEBUG_GLASSFLAG_R {
    get {
      int ret = dllmainPINVOKE.IKIris_RESERVEDINFO_DEBUG_GLASSFLAG_R_get();
      return ret;
    } 
  }

  public static int IKIris_RESERVEDINFO_DEBUG_QUALITYSCORE_L {
    get {
      int ret = dllmainPINVOKE.IKIris_RESERVEDINFO_DEBUG_QUALITYSCORE_L_get();
      return ret;
    } 
  }

  public static int IKIris_RESERVEDINFO_DEBUG_QUALITYSCORE_R {
    get {
      int ret = dllmainPINVOKE.IKIris_RESERVEDINFO_DEBUG_QUALITYSCORE_R_get();
      return ret;
    } 
  }

  public static int IKIris_Fun_Success {
    get {
      int ret = dllmainPINVOKE.IKIris_Fun_Success_get();
      return ret;
    } 
  }

  public static int IKIris_Err_BASE {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_BASE_get();
      return ret;
    } 
  }

  public static int IKIris_Err_ENR_IDEN_INTERRUPT {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_ENR_IDEN_INTERRUPT_get();
      return ret;
    } 
  }

  public static int IKIris_Err_INIT_FAILED {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_INIT_FAILED_get();
      return ret;
    } 
  }

  public static int IKIris_Err_INVALID_LICENSE {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_INVALID_LICENSE_get();
      return ret;
    } 
  }

  public static int IKIris_Err_INVALID_PARAMETER {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_INVALID_PARAMETER_get();
      return ret;
    } 
  }

  public static int IKIris_Err_INVALID_CONFIGTRACENUM {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_INVALID_CONFIGTRACENUM_get();
      return ret;
    } 
  }

  public static int IKIris_Err_INVALID_DELETEAREA {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_INVALID_DELETEAREA_get();
      return ret;
    } 
  }

  public static int IKIris_Err_VERYFYDEV_ERROR {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_VERYFYDEV_ERROR_get();
      return ret;
    } 
  }

  public static int IKIris_Err_INVALID_OVERTIME {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_INVALID_OVERTIME_get();
      return ret;
    } 
  }

  public static int IKIris_Err_INVALID_ENRNUM {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_INVALID_ENRNUM_get();
      return ret;
    } 
  }

  public static int IKIris_Err_DEVICE_UPSIDEDOWN {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_DEVICE_UPSIDEDOWN_get();
      return ret;
    } 
  }

  public static int IKIris_Err_ENR_IDEN_FAILED {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_ENR_IDEN_FAILED_get();
      return ret;
    } 
  }

  public static int IKIris_Err_INVALID_IRIS_DEVICETYPE {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_INVALID_IRIS_DEVICETYPE_get();
      return ret;
    } 
  }

  public static int IKIris_Err_FAIL2STOP {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_FAIL2STOP_get();
      return ret;
    } 
  }

  public static int IKIris_Err_INVALID_IRIS_MODE {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_INVALID_IRIS_MODE_get();
      return ret;
    } 
  }

  public static int IKIris_Err_ENROLLIDEN_OVERTIME {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_ENROLLIDEN_OVERTIME_get();
      return ret;
    } 
  }

  public static int IKIris_Err_IDEN_UNSUPPORT_FEATURE_NUM {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_IDEN_UNSUPPORT_FEATURE_NUM_get();
      return ret;
    } 
  }

  public static int IKIris_Err_ASYNCTASK_BUSY {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_ASYNCTASK_BUSY_get();
      return ret;
    } 
  }

  public static int IKIris_Err_Fea_Unmatch {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_Fea_Unmatch_get();
      return ret;
    } 
  }

  public static int IKIris_Err_Data_Interrupted {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_Data_Interrupted_get();
      return ret;
    } 
  }

  public static int IKIris_Err_Invalid_Setting {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_Invalid_Setting_get();
      return ret;
    } 
  }

  public static int IKIris_Err_Handle {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_Handle_get();
      return ret;
    } 
  }

  public static int IKIris_Err_RESET_BUSY {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_RESET_BUSY_get();
      return ret;
    } 
  }

  public static int IKIris_Err_IMG_NUM_DIFFERROR {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_IMG_NUM_DIFFERROR_get();
      return ret;
    } 
  }

  public static int IKIris_Err_RESET_CLEAR {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_RESET_CLEAR_get();
      return ret;
    } 
  }

  public static int IKIris_Err_RESET_FAILED {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_RESET_FAILED_get();
      return ret;
    } 
  }

  public static int IKIris_Err_QUEUE_FULL_CLEAR {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_QUEUE_FULL_CLEAR_get();
      return ret;
    } 
  }

  public static int IKIris_Err_QUEUE_ENR_IDEN_END_CLEAR {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_QUEUE_ENR_IDEN_END_CLEAR_get();
      return ret;
    } 
  }

  public static int IKIris_Err_CLEAR_CACHE_FAILED {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_CLEAR_CACHE_FAILED_get();
      return ret;
    } 
  }

  public static int IKIris_Err_SELECTION_NOTREACHED {
    get {
      int ret = dllmainPINVOKE.IKIris_Err_SELECTION_NOTREACHED_get();
      return ret;
    } 
  }

  public static IKBaseSDKAPI creatobj() {
    global::System.IntPtr cPtr = dllmainPINVOKE.creatobj();
    IKBaseSDKAPI ret = (cPtr == global::System.IntPtr.Zero) ? null : new IKBaseSDKAPI(cPtr, false);
    return ret;
  }

  public static int IK_Fun_Success {
    get {
      int ret = dllmainPINVOKE.IK_Fun_Success_get();
      return ret;
    } 
  }

  public static int IK_Err_BASE {
    get {
      int ret = dllmainPINVOKE.IK_Err_BASE_get();
      return ret;
    } 
  }

  public static int IK_Err_INIT_FAILED {
    get {
      int ret = dllmainPINVOKE.IK_Err_INIT_FAILED_get();
      return ret;
    } 
  }

  public static int IK_Err_INVALID_PARAMETER {
    get {
      int ret = dllmainPINVOKE.IK_Err_INVALID_PARAMETER_get();
      return ret;
    } 
  }

  public static int IK_Err_CREATEIRISCAMERA_FAILED {
    get {
      int ret = dllmainPINVOKE.IK_Err_CREATEIRISCAMERA_FAILED_get();
      return ret;
    } 
  }

  public static int IK_Err_CREATEFACECAMERA_FAILED {
    get {
      int ret = dllmainPINVOKE.IK_Err_CREATEFACECAMERA_FAILED_get();
      return ret;
    } 
  }

  public static int IK_Err_CREATEDEPTHCAMERA_FAILED {
    get {
      int ret = dllmainPINVOKE.IK_Err_CREATEDEPTHCAMERA_FAILED_get();
      return ret;
    } 
  }

  public static int IK_Err_CREATEPTZ_FAILED {
    get {
      int ret = dllmainPINVOKE.IK_Err_CREATEPTZ_FAILED_get();
      return ret;
    } 
  }

  public static int IK_Err_INVALID_ENROLLIDENTMODE {
    get {
      int ret = dllmainPINVOKE.IK_Err_INVALID_ENROLLIDENTMODE_get();
      return ret;
    } 
  }

  public static int IK_Err_INVALID_MATCHMODE {
    get {
      int ret = dllmainPINVOKE.IK_Err_INVALID_MATCHMODE_get();
      return ret;
    } 
  }

  public static int IK_Err_NOFOUND_CONFIGFILE {
    get {
      int ret = dllmainPINVOKE.IK_Err_NOFOUND_CONFIGFILE_get();
      return ret;
    } 
  }

  public static int IK_Err_STARTIDENT_ModeUndef_FAILED {
    get {
      int ret = dllmainPINVOKE.IK_Err_STARTIDENT_ModeUndef_FAILED_get();
      return ret;
    } 
  }

  public static int IK_Err_CONFIG_FAILED {
    get {
      int ret = dllmainPINVOKE.IK_Err_CONFIG_FAILED_get();
      return ret;
    } 
  }

  public static int IK_Err_SETCONFIGFILEPATH_FAILED {
    get {
      int ret = dllmainPINVOKE.IK_Err_SETCONFIGFILEPATH_FAILED_get();
      return ret;
    } 
  }

  public static int IK_Err_ASYNCTASK_BUSY {
    get {
      int ret = dllmainPINVOKE.IK_Err_ASYNCTASK_BUSY_get();
      return ret;
    } 
  }

  public static int IK_Err_NOTSUPPORT {
    get {
      int ret = dllmainPINVOKE.IK_Err_NOTSUPPORT_get();
      return ret;
    } 
  }

  public static int IK_Err_REPEATINIT {
    get {
      int ret = dllmainPINVOKE.IK_Err_REPEATINIT_get();
      return ret;
    } 
  }

  public static int IK_Err_INVALID_DEVICETYPE {
    get {
      int ret = dllmainPINVOKE.IK_Err_INVALID_DEVICETYPE_get();
      return ret;
    } 
  }

  public static int IK_STARTIDENT_ModeUndef_IRISFAILED {
    get {
      int ret = dllmainPINVOKE.IK_STARTIDENT_ModeUndef_IRISFAILED_get();
      return ret;
    } 
  }

  public static int IK_STARTIDENT_ModeUndef_FACEFAILED {
    get {
      int ret = dllmainPINVOKE.IK_STARTIDENT_ModeUndef_FACEFAILED_get();
      return ret;
    } 
  }

  public static int E_CAMERA_OK {
    get {
      int ret = dllmainPINVOKE.E_CAMERA_OK_get();
      return ret;
    } 
  }

  public static int E_CAMERA_BASE_ERROR {
    get {
      int ret = dllmainPINVOKE.E_CAMERA_BASE_ERROR_get();
      return ret;
    } 
  }

  public static int E_CAMERA_INVALID_OPERATE {
    get {
      int ret = dllmainPINVOKE.E_CAMERA_INVALID_OPERATE_get();
      return ret;
    } 
  }

  public static int E_CAMERA_INVALID_INPUT {
    get {
      int ret = dllmainPINVOKE.E_CAMERA_INVALID_INPUT_get();
      return ret;
    } 
  }

  public static int E_CAMERA_INVALID_DEVICETYPE {
    get {
      int ret = dllmainPINVOKE.E_CAMERA_INVALID_DEVICETYPE_get();
      return ret;
    } 
  }

  public static int E_CAMERA_INIT_FAILED {
    get {
      int ret = dllmainPINVOKE.E_CAMERA_INIT_FAILED_get();
      return ret;
    } 
  }

  public static int E_CAMERA_DEVICE_NOTFOUND {
    get {
      int ret = dllmainPINVOKE.E_CAMERA_DEVICE_NOTFOUND_get();
      return ret;
    } 
  }

  public static int E_CAMERA_OPEN_FAILED {
    get {
      int ret = dllmainPINVOKE.E_CAMERA_OPEN_FAILED_get();
      return ret;
    } 
  }

  public static int E_CAMERA_INVALID_FORMAT_SETTING {
    get {
      int ret = dllmainPINVOKE.E_CAMERA_INVALID_FORMAT_SETTING_get();
      return ret;
    } 
  }

  public static int E_CAMERA_WAITCB_TIMEOUT {
    get {
      int ret = dllmainPINVOKE.E_CAMERA_WAITCB_TIMEOUT_get();
      return ret;
    } 
  }

  public static int E_CAMERA_NOT_SUPPORT {
    get {
      int ret = dllmainPINVOKE.E_CAMERA_NOT_SUPPORT_get();
      return ret;
    } 
  }

  public static int E_CAMERA_INTERFACE_FAILED {
    get {
      int ret = dllmainPINVOKE.E_CAMERA_INTERFACE_FAILED_get();
      return ret;
    } 
  }

  public static int E_CAMERA_DEVICE_HAS_OPEND {
    get {
      int ret = dllmainPINVOKE.E_CAMERA_DEVICE_HAS_OPEND_get();
      return ret;
    } 
  }

  public static int E_CAMERA_DEVICE_CTRLCOM_ERROR {
    get {
      int ret = dllmainPINVOKE.E_CAMERA_DEVICE_CTRLCOM_ERROR_get();
      return ret;
    } 
  }

  public static int E_CAMERA_READ_DEVICE_PROP {
    get {
      int ret = dllmainPINVOKE.E_CAMERA_READ_DEVICE_PROP_get();
      return ret;
    } 
  }

  public static int E_CAMERA_WRITE_DEVICE_PROP {
    get {
      int ret = dllmainPINVOKE.E_CAMERA_WRITE_DEVICE_PROP_get();
      return ret;
    } 
  }

  public static int E_CAMERA_LIB_NOT_FOUND {
    get {
      int ret = dllmainPINVOKE.E_CAMERA_LIB_NOT_FOUND_get();
      return ret;
    } 
  }

  public static readonly string CONF_FILE_PATH = dllmainPINVOKE.CONF_FILE_PATH_get();
  public static readonly int DNSMPRATE = dllmainPINVOKE.DNSMPRATE_get();
  public static readonly int CBDEFAULTVALUE = dllmainPINVOKE.CBDEFAULTVALUE_get();
}
